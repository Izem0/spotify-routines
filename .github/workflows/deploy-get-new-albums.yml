name: deploy update-top-songs

on:
  push:
    branches:
      - main
      - dev

jobs:
  publish_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create .env file
        run: |
          echo "GMAIL_ADDRESS=${{ secrets.GMAIL_ADDRESS}}" >> .env
          echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD}}" >> .env
          echo "RELEASE_RADAR_ID=${{ secrets.RELEASE_RADAR_ID}}" >> .env
          echo "SPOTIFY_CLIENT_BASE_64=${{ secrets.SPOTIFY_CLIENT_BASE_64}}" >> .env
          echo "SPOTIFY_REFRESH_TOKEN=${{ secrets.SPOTIFY_REFRESH_TOKEN}}" >> .env
          echo "USER_ID=${{ secrets.USER_ID}}" >> .env

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_NAME: ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPO }}:${{secrets.GET_NEW_ALBUMS_LAMBDA_FUNCTION_NAME}}-${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR 
          echo "image=$IMAGE_NAME"
          docker build -f get_new_albums.Dockerfile --platform linux/amd64 -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy_to_lambda:
    runs-on: ubuntu-latest
    needs: publish_docker_image
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy ECR Image to Lambda
        env:
          IMAGE_NAME: ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPO }}:${{secrets.GET_NEW_ALBUMS_LAMBDA_FUNCTION_NAME}}-${{ github.sha }}
        run: |
          aws lambda update-function-code --region ${{ secrets.AWS_DEFAULT_REGION }} --function-name ${{secrets.GET_NEW_ALBUMS_LAMBDA_FUNCTION_NAME}} --image-uri $IMAGE_NAME
